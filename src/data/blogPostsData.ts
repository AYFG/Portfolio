export const blogPostsData = [
  {
    id: 1,
    title: "미니멀리스트 디자인의 예술",
    summary:
      "불필요한 것을 제거하는 것이 어떻게 사용자 집중도를 높이고 더 우아하고 직관적인 경험을 만들어내는지 탐구합니다.",
    publishedDate: "2023년 10월 26일",
    content:
      "디자인에서 미니멀리즘은 단순히 미학에 관한 것이 아닙니다. 그것은 본질에 집중하는 원칙입니다. 불필요한 장식을 제거함으로써 우리는 사용자가 가장 중요한 콘텐츠와 기능에 집중할 수 있도록 안내하는 명확하고 정돈된 인터페이스를 만들 수 있습니다.\n\n이 접근 방식은 인지 부하를 줄여 사용자가 작업을 더 쉽고 빠르게 완료할 수 있도록 합니다. 모든 요소는 목적을 가지고 있어야 하며, 사려 깊은 네거티브 스페이스의 사용은 균형과 평온함을 만듭니다. 결과적으로 더 매력적이고 사용자 친화적인 경험을 제공하게 됩니다.",
  },
  {
    id: 2,
    title: "고성능 리액트 컴포넌트 만들기",
    summary:
      "메모이제이션, 코드 분할 및 번개처럼 빠른 사용자 인터페이스를 구축하기 위한 기타 기술에 대한 심층 분석입니다.",
    publishedDate: "2023년 9월 15일",
    content:
      "고성능 리액트 애플리케이션을 구축하려면 초기 렌더링 속도와 업데이트 응답성을 모두 최적화해야 합니다. React.memo, useMemo, useCallback과 같은 메모이제이션 기술은 불필요한 재렌더링을 방지하는 데 중요한 역할을 합니다.\n\n코드 분할은 초기 로드 시간을 줄이는 또 다른 강력한 전략입니다. 경로 또는 컴포넌트 수준에서 코드를 분할함으로써 사용자가 필요로 할 때만 코드를 로드하여 초기 번들 크기를 크게 줄일 수 있습니다. 이러한 기술을 결합하면 원활하고 빠른 사용자 경험을 보장할 수 있습니다.",
  },
  {
    id: 3,
    title: "시니어 엔지니어가 지루한 코드를 작성하는 이유",
    summary:
      "장기 소프트웨어 프로젝트에서 영리하고 복잡한 솔루션보다 예측 가능성과 유지 관리 가능성을 옹호하는 주장입니다.",
    publishedDate: "2023년 8월 2일",
    content:
      "소프트웨어 개발 경력이 쌓이면 '영리한' 코드보다 '지루한' 코드를 더 중요하게 생각하게 됩니다. 지루한 코드는 예측 가능하고, 읽기 쉬우며, 유지 관리가 용이합니다. 새로운 팀원이 복잡한 추상화나 영리한 트릭을 해독하는 데 몇 시간을 소비할 필요 없이 빠르게 이해하고 기여할 수 있는 코드입니다.\n\n장기 프로젝트의 성공은 코드베이스의 지속 가능성에 달려 있습니다. 명확하고 직접적인 솔루션을 선택하는 것은 미래의 자신과 동료를 위한 투자이며, 버그를 줄이고 향후 개발을 단순화합니다. 혁신은 복잡성이 아니라 단순성과 명확성에서 비롯될 때가 많습니다.",
  },
];
export default blogPostsData;
